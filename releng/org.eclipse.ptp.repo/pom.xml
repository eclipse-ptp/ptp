<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.eclipse.ptp</groupId>
		<artifactId>ptp-parent</artifactId>
		<version>9.1.4-SNAPSHOT</version>
		<relativePath>../../pom.xml</relativePath>
	</parent>

	<artifactId>org.eclipse.ptp.repo</artifactId>
	<version>9.1.4-SNAPSHOT</version>
	<packaging>eclipse-repository</packaging>
	<profiles>
		<profile>
			<id>production</id>

			<properties>
				<mirror-repo-name>updates/${eclipse-release}</mirror-repo-name>
			</properties>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-promotion</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<!-- copy scripts to build directory and execute -->
										<copy file="p2.xsl" todir="${project.build.directory}" />
										<copy file="promoter.xml" todir="${project.build.directory}" />
										<ant antfile="${project.build.directory}/promoter.xml" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>deploy</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<mkdir dir="${ptp-install-dir}" />
										<delete includeemptydirs="true">
											<fileset dir="${ptp-install-dir}">
												<include name="**/*" />
											</fileset>
										</delete>
										
										<!-- Unzip p2 repo into install dir -->
										<unzip
											src="${project.build.directory}/${project.build.finalName}.zip"
											dest="${ptp-install-dir}" />
											
										<!-- Put copy of master repo zip into install dir -->
										<copy
											file="${project.build.directory}/${project.build.finalName}.zip"
											tofile="${ptp-install-dir}/ptp-master-${unqualifiedVersion}.${buildQualifier}.zip" />
											
										<!-- Create zip archive for the SDM source and binaries -->
										<unzip
											src="${basedir}/../../releng/org.eclipse.ptp.aix/target/org.eclipse.ptp.aix-${project.version}.jar"
											dest="${ptp-install-dir}/sdm/org.eclipse.ptp.aix_${unqualifiedVersion}.${buildQualifier}" />
										<chmod perm="a+x"
											file="${ptp-install-dir}/sdm/org.eclipse.ptp.aix_${unqualifiedVersion}.${buildQualifier}/os/aix/ppc64/sdm" />
										<unzip
											src="${basedir}/../../releng/org.eclipse.ptp.linux/target/org.eclipse.ptp.linux-${project.version}.jar"
											dest="${ptp-install-dir}/sdm/org.eclipse.ptp.linux_${unqualifiedVersion}.${buildQualifier}" />
										<chmod perm="a+x"
											file="${ptp-install-dir}/sdm/org.eclipse.ptp.linux_${unqualifiedVersion}.${buildQualifier}/os/linux/ppc64/sdm" />
										<chmod perm="a+x"
											file="${ptp-install-dir}/sdm/org.eclipse.ptp.linux_${unqualifiedVersion}.${buildQualifier}/os/linux/x86_64/sdm" />
										<unzip
											src="${basedir}/../../releng/org.eclipse.ptp.macosx/target/org.eclipse.ptp.macosx-${project.version}.jar"
											dest="${ptp-install-dir}/sdm/org.eclipse.ptp.macosx_${unqualifiedVersion}.${buildQualifier}" />
										<chmod perm="a+x"
											file="${ptp-install-dir}/sdm/org.eclipse.ptp.macosx_${unqualifiedVersion}.${buildQualifier}/os/macosx/x86_64/sdm" />
										<unzip
											src="${basedir}/../../debug/org.eclipse.ptp.debug.sdm/target/org.eclipse.ptp.debug.sdm-${project.version}.jar"
											dest="${ptp-install-dir}/sdm/org.eclipse.ptp.debug.sdm_${unqualifiedVersion}.${buildQualifier}" />
										<unzip
											src="${basedir}/../../core/org.eclipse.ptp.proxy/target/org.eclipse.ptp.proxy-${project.version}.jar"
											dest="${ptp-install-dir}/sdm/org.eclipse.ptp.proxy_${unqualifiedVersion}.${buildQualifier}" />
										<unzip
											src="${basedir}/../../core/org.eclipse.ptp.utils/target/org.eclipse.ptp.utils-${project.version}.jar"
											dest="${ptp-install-dir}/sdm/org.eclipse.ptp.utils_${unqualifiedVersion}.${buildQualifier}" />
										<exec executable="zip" dir="${ptp-install-dir}">
											<arg
												line="-r ${ptp-install-dir}/ptp-sdm-${unqualifiedVersion}.zip sdm" />
										</exec>
										<delete includeEmptyDirs="true">
											<fileset dir="${ptp-install-dir}/sdm" />
										</delete>
										
										<!-- Create a tar archive for the SCI source -->
										<unzip
											src="${basedir}/../../tools/sci/org.eclipse.ptp.sci/target/org.eclipse.ptp.sci-${project.version}.jar"
											dest="${ptp-install-dir}/sci/ptp-sci-${unqualifiedVersion}" />
										<tar
											basedir="${ptp-install-dir}/sci"
											destfile="${ptp-install-dir}/ptp-sci-${unqualifiedVersion}.tar.gz" 
											compression="gzip" />
										<delete includeEmptyDirs="true">
											<fileset dir="${ptp-install-dir}/sci" />
										</delete>
											
										<!-- Copy the index.html and update with new version -->
										<copy file="${basedir}/index.html" tofile="${ptp-install-dir}/index.html" />
										<replace file="${ptp-install-dir}/index.html">
											<replacefilter token="@unqualifiedVersion@"
												value="${unqualifiedVersion}" />
											<replacefilter token="@buildQualifier@" value="${buildQualifier}" />
										</replace>
										
										<!--  Make sure the install dir is writable to the group -->
										<chmod perm="g+w">
											<fileset dir="${ptp-install-dir}">
												<include name="**" />
											</fileset>
										</chmod>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
